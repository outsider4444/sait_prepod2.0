# Generated by Django 3.2 on 2021-05-06 08:22

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Почта')),
                ('password1', models.CharField(max_length=100, verbose_name='Пароль1')),
                ('password2', models.CharField(max_length=100, verbose_name='Пароль2')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(blank=True, default=None, null=True, verbose_name='Код группы')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название предмета')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='TrpoPractices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='trpo/practices', verbose_name='Файл')),
                ('name', models.CharField(max_length=100, verbose_name='Имя лекции')),
                ('date', models.DateField(verbose_name='Дата')),
                ('items_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_sait.items', verbose_name='Код предмета')),
            ],
            options={
                'verbose_name': 'ТРПО Практика',
                'verbose_name_plural': 'ТРПО Практики',
            },
        ),
        migrations.CreateModel(
            name='TrpoLectures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='trpo/lectures', verbose_name='Файл')),
                ('name', models.CharField(max_length=100, verbose_name='Имя лекции')),
                ('date', models.DateField(verbose_name='Дата')),
                ('items_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_sait.items', verbose_name='Код предмета')),
            ],
            options={
                'verbose_name': 'ТРПО Лекция',
                'verbose_name_plural': 'ТРПО Лекции',
            },
        ),
        migrations.CreateModel(
            name='PP0201Practices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pp0201/practices', verbose_name='Файл')),
                ('name', models.CharField(max_length=100, verbose_name='Имя лекции')),
                ('date', models.DateField(verbose_name='Дата')),
                ('items_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_sait.items', verbose_name='Код предмета')),
            ],
            options={
                'verbose_name': 'ПП.02.01. Практика',
                'verbose_name_plural': 'ПП.02.01. Практики',
            },
        ),
        migrations.CreateModel(
            name='PP0201Lectures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pp0201/lectures', verbose_name='Файл')),
                ('name', models.CharField(max_length=100, verbose_name='Имя лекции')),
                ('date', models.DateField(verbose_name='Дата')),
                ('items_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_sait.items', verbose_name='Код предмета')),
            ],
            options={
                'verbose_name': 'ПП.02.01. Лекция',
                'verbose_name_plural': 'ПП.02.01. Лекции',
            },
        ),
        migrations.CreateModel(
            name='PP0102Practices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pp0102/practices', verbose_name='Файл')),
                ('name', models.CharField(max_length=100, verbose_name='Имя лекции')),
                ('date', models.DateField(verbose_name='Дата')),
                ('items_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_sait.items', verbose_name='Код предмета')),
            ],
            options={
                'verbose_name': 'ПП.01.02. Практика',
                'verbose_name_plural': 'ПП.01.02. Практики',
            },
        ),
        migrations.CreateModel(
            name='PP0102Lectures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pp0102/lectures', verbose_name='Файл')),
                ('name', models.CharField(max_length=100, verbose_name='Имя лекции')),
                ('date', models.DateField(verbose_name='Дата')),
                ('items_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_sait.items', verbose_name='Код предмета')),
            ],
            options={
                'verbose_name': 'ПП.01.02. Лекция',
                'verbose_name_plural': 'ПП.01.02. Лекции',
            },
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('mark', models.IntegerField(verbose_name='Оценка')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_sait.groups', verbose_name='Группа')),
                ('items_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_sait.items', verbose_name='Предмет')),
                ('users_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Код пользователя')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='my_sait.groups', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
